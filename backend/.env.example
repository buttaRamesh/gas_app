# Django Security Settings Template
# Copy this file to .env and fill in your actual values
# NEVER commit the actual .env file to version control!

# ============================================
# SECURITY SETTINGS (REQUIRED)
# ============================================

# Generate a new secret key using:
# python -c "import secrets; print(''.join(secrets.choice('abcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*(-_=+)') for i in range(50)))"
SECRET_KEY=your-secret-key-here

# Set to False in production!
DEBUG=True

# Add your domain names here (comma-separated for multiple hosts)
# Development example: localhost,127.0.0.1
# Production example: yourdomain.com,www.yourdomain.com,your-server-ip
ALLOWED_HOSTS=localhost,127.0.0.1

# ============================================
# CORS CONFIGURATION
# ============================================

# Set to False in production (recommended)
CORS_ORIGIN_ALLOW_ALL=False

# Add your frontend URLs here (comma-separated)
# Example: http://localhost:3000,https://yourdomain.com
CORS_ALLOWED_ORIGINS=http://localhost:3000,http://localhost:8000,http://127.0.0.1:3000,http://127.0.0.1:8000

# ============================================
# DATABASE CONFIGURATION
# ============================================

# For SQLite (development):
DB_ENGINE=django.db.backends.sqlite3
DB_NAME=db.sqlite3

# For MySQL (production - uncomment and configure):
# DB_ENGINE=django.db.backends.mysql
# DB_NAME=gasapp_db
# DB_USER=your_database_user
# DB_PASSWORD=your_secure_database_password
# DB_HOST=localhost
# DB_PORT=3306

# ============================================
# SETUP INSTRUCTIONS
# ============================================
# 1. Copy this file: cp .env.example .env
# 2. Generate a new SECRET_KEY (see command above)
# 3. Update all values with your actual configuration
# 4. For production:
#    - Set DEBUG=False
#    - Set CORS_ORIGIN_ALLOW_ALL=False
#    - Configure ALLOWED_HOSTS with your domain
#    - Use strong database credentials
# 5. Never commit your .env file to git!
